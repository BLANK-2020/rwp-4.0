/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    tenants: Tenant;
    jobs: Job;
    sectors: Sector;
    events: Event;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    jobs: JobsSelect<false> | JobsSelect<true>;
    sectors: SectorsSelect<false> | SectorsSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  /**
   * The tenant this user belongs to
   */
  tenant: number | Tenant;
  /**
   * User role within the tenant
   */
  role: 'admin' | 'recruiter';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  name: string;
  slug: string;
  /**
   * The custom domain for this tenant (e.g., www.clientname.com.au)
   */
  customDomain?: string | null;
  brandingConfig?: {
    logo?: (number | null) | Media;
    primaryColor?: string | null;
    secondaryColor?: string | null;
  };
  subscription: {
    plan: 'core' | 'pro' | 'enterprise';
    status: 'active' | 'past_due' | 'canceled';
    stripeCustomerId?: string | null;
    stripeSubscriptionId?: string | null;
  };
  features?: {
    jobAdder?: boolean | null;
    bullhorn?: boolean | null;
    advancedAnalytics?: boolean | null;
    customBranding?: boolean | null;
    marketingPixels?: boolean | null;
    retargeting?: boolean | null;
  };
  atsConfig?: {
    jobAdder?: {
      clientId?: string | null;
      clientSecret?: string | null;
      /**
       * OAuth access token (managed automatically)
       */
      accessToken?: string | null;
      /**
       * OAuth refresh token (managed automatically)
       */
      refreshToken?: string | null;
      /**
       * OAuth token expiry date (managed automatically)
       */
      tokenExpiry?: string | null;
    };
    bullhorn?: {
      apiKey?: string | null;
      clientId?: string | null;
      clientSecret?: string | null;
    };
  };
  /**
   * Configure marketing pixels and tracking for this tenant
   */
  marketingConfig?: {
    facebookPixel?: {
      enabled?: boolean | null;
      /**
       * Facebook Pixel ID (e.g., 123456789012345)
       */
      pixelId?: string | null;
      advancedMatching?: boolean | null;
    };
    googleTagManager?: {
      enabled?: boolean | null;
      /**
       * GTM Container ID (e.g., GTM-XXXXXXX)
       */
      containerId?: string | null;
    };
    linkedInInsightTag?: {
      enabled?: boolean | null;
      /**
       * LinkedIn Partner ID (e.g., 123456)
       */
      partnerId?: string | null;
    };
    googleAnalytics?: {
      enabled?: boolean | null;
      /**
       * GA4 Measurement ID (e.g., G-XXXXXXXXXX)
       */
      measurementId?: string | null;
    };
  };
  /**
   * Configure retargeting campaigns for this tenant
   */
  retargetingConfig?: {
    /**
     * Time window to consider an application abandoned (in minutes)
     */
    abandonedApplicationWindow?: number | null;
    /**
     * Delay before sending retargeting emails (in hours)
     */
    retargetingDelay?: number | null;
    /**
     * Maximum number of retargeting attempts per user
     */
    maxRetargetingAttempts?: number | null;
    /**
     * Email template for retargeting (supports variables like {{jobTitle}})
     */
    emailTemplate?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobs".
 */
export interface Job {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title (auto-generated if empty)
   */
  slug?: string | null;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  location: string;
  /**
   * The industry sector this job belongs to
   */
  sector?: (number | null) | Sector;
  type: 'full-time' | 'part-time' | 'contract' | 'temporary';
  salary?: {
    min?: number | null;
    max?: number | null;
    currency?: string | null;
    period?: ('annual' | 'hourly') | null;
  };
  /**
   * Display this job on the homepage
   */
  featured?: boolean | null;
  /**
   * URL for job applications (used for tracking)
   */
  apply_link?: string | null;
  /**
   * Date when this job should no longer be displayed
   */
  expiry_date?: string | null;
  /**
   * When this job was created
   */
  created_at?: string | null;
  status: 'draft' | 'published' | 'closed';
  tenant: number | Tenant;
  /**
   * Data from the Applicant Tracking System
   */
  atsData?: {
    /**
     * ATS source identifier (e.g., "jobadder", "bullhorn")
     */
    source?: string | null;
    /**
     * ID in the source ATS system
     */
    sourceId?: string | null;
    /**
     * Additional reference information from the ATS
     */
    sourceReference?: string | null;
    /**
     * When this job was last synced with the ATS
     */
    lastSynced?: string | null;
    jobAdderId?: string | null;
    bullhornId?: string | null;
    /**
     * JobAdder-specific data
     */
    jobAdder?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * Bullhorn-specific data
     */
    bullhorn?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  /**
   * SEO metadata for this job
   */
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sectors".
 */
export interface Sector {
  id: number;
  name: string;
  /**
   * URL-friendly version of the name (auto-generated if empty)
   */
  slug?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Parent sector (for hierarchical categorization)
   */
  parent?: (number | null) | Sector;
  tenant: number | Tenant;
  /**
   * SEO metadata for this sector
   */
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  type: 'job_viewed' | 'apply_started' | 'apply_completed' | 'retarget_triggered';
  timestamp: string;
  job: number | Job;
  user?: (number | null) | User;
  sessionId: string;
  source?: string | null;
  medium?: string | null;
  campaign?: string | null;
  referrer?: string | null;
  tenant: number | Tenant;
  /**
   * Additional event-specific data
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'jobs';
        value: number | Job;
      } | null)
    | ({
        relationTo: 'sectors';
        value: number | Sector;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  tenant?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  customDomain?: T;
  brandingConfig?:
    | T
    | {
        logo?: T;
        primaryColor?: T;
        secondaryColor?: T;
      };
  subscription?:
    | T
    | {
        plan?: T;
        status?: T;
        stripeCustomerId?: T;
        stripeSubscriptionId?: T;
      };
  features?:
    | T
    | {
        jobAdder?: T;
        bullhorn?: T;
        advancedAnalytics?: T;
        customBranding?: T;
        marketingPixels?: T;
        retargeting?: T;
      };
  atsConfig?:
    | T
    | {
        jobAdder?:
          | T
          | {
              clientId?: T;
              clientSecret?: T;
              accessToken?: T;
              refreshToken?: T;
              tokenExpiry?: T;
            };
        bullhorn?:
          | T
          | {
              apiKey?: T;
              clientId?: T;
              clientSecret?: T;
            };
      };
  marketingConfig?:
    | T
    | {
        facebookPixel?:
          | T
          | {
              enabled?: T;
              pixelId?: T;
              advancedMatching?: T;
            };
        googleTagManager?:
          | T
          | {
              enabled?: T;
              containerId?: T;
            };
        linkedInInsightTag?:
          | T
          | {
              enabled?: T;
              partnerId?: T;
            };
        googleAnalytics?:
          | T
          | {
              enabled?: T;
              measurementId?: T;
            };
      };
  retargetingConfig?:
    | T
    | {
        abandonedApplicationWindow?: T;
        retargetingDelay?: T;
        maxRetargetingAttempts?: T;
        emailTemplate?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobs_select".
 */
export interface JobsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  location?: T;
  sector?: T;
  type?: T;
  salary?:
    | T
    | {
        min?: T;
        max?: T;
        currency?: T;
        period?: T;
      };
  featured?: T;
  apply_link?: T;
  expiry_date?: T;
  created_at?: T;
  status?: T;
  tenant?: T;
  atsData?:
    | T
    | {
        source?: T;
        sourceId?: T;
        sourceReference?: T;
        lastSynced?: T;
        jobAdderId?: T;
        bullhornId?: T;
        jobAdder?: T;
        bullhorn?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sectors_select".
 */
export interface SectorsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  parent?: T;
  tenant?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  type?: T;
  timestamp?: T;
  job?: T;
  user?: T;
  sessionId?: T;
  source?: T;
  medium?: T;
  campaign?: T;
  referrer?: T;
  tenant?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}